//
//  CAAnimation+MDP.m
//  MDPFramework
//
//  Created by xiejinzhan on 14-8-6.
//  Copyright (c) 2014å¹´ jz. All rights reserved.
//

#import "CAAnimation+MDF.h"

@interface __CAAnimationDelegate : NSObject

@property (nonatomic, copy) void (^completion)(BOOL);
@property (nonatomic, copy) void (^start)(void);
@property (nonatomic, strong) id __previousDelegate;

@end

@implementation __CAAnimationDelegate

- (void)dealloc
{
    _completion = NULL;
    _start = NULL;
    ___previousDelegate = nil;
}

- (void)animationDidStart:(CAAnimation *)anim
{
    if ([anim.delegate isEqual:self]){
        if (self.__previousDelegate && [self.__previousDelegate respondsToSelector:@selector(animationDidStart:)]){
            [self.__previousDelegate animationDidStart:anim];
        }
        if (self.start){
            self.start();
        }
    }
}

- (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag
{
    if ([anim.delegate isEqual:self]){
        if (self.__previousDelegate && [self.__previousDelegate respondsToSelector:@selector(animationDidStop:finished:)]){
            [self.__previousDelegate animationDidStop:anim finished:flag];
        }
        
        if (self.completion){
            self.completion(flag);
        }
    }
}

@end

@implementation CAAnimation (MDF)

- (void)setCompletionBlock:(void (^)(BOOL))completion
{
    if ([self.delegate isKindOfClass:[__CAAnimationDelegate class]]) {
        ((__CAAnimationDelegate *)self.delegate).completion = completion;
    }
    else {
        __CAAnimationDelegate *delegate = [[__CAAnimationDelegate alloc] init];
        delegate.completion = completion;
        delegate.__previousDelegate = self.delegate;
        self.delegate = delegate;
    }
}

- (void (^)(BOOL))completionBlock
{
    return [self.delegate isKindOfClass:[__CAAnimationDelegate class]]? ((__CAAnimationDelegate *)self.delegate).completion : nil;
}

- (void)setStartBlock:(void (^)(void))startBlock
{
    if ([self.delegate isKindOfClass:[__CAAnimationDelegate class]]) {
        ((__CAAnimationDelegate *)self.delegate).start = startBlock;
    }
    else {
        __CAAnimationDelegate *delegate = [[__CAAnimationDelegate alloc] init];
        delegate.start = startBlock;
        delegate.__previousDelegate = self.delegate;
        self.delegate = delegate;
    }
}

- (void (^)(void))startBlock
{
    return [self.delegate isKindOfClass:[__CAAnimationDelegate class]]? ((__CAAnimationDelegate *)self.delegate).start: nil;
}

@end

